# Generated by Django 2.2.7 on 2020-01-01 11:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('appointment_status', models.IntegerField(blank=True, null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('dealer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('dealer_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dealer_contact_no', models.IntegerField(blank=True, null=True)),
                ('dealer_address', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'dealer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.IntegerField(primary_key=True, serialize=False)),
                ('feedback_desc', models.CharField(blank=True, max_length=250, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gallary',
            fields=[
                ('image_id', models.IntegerField(primary_key=True, serialize=False)),
                ('image_url', models.CharField(blank=True, max_length=45, null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'gallary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MembershipType',
            fields=[
                ('membership_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('membership_name', models.CharField(blank=True, max_length=50, null=True)),
                ('membership_duration', models.IntegerField(blank=True, null=True)),
                ('membership_fees', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'membership_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('offer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('offers_start_date', models.DateField(blank=True, null=True)),
                ('offers_end_date', models.DateField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'offers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('package_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('package_name', models.CharField(max_length=45)),
                ('package_start_dt', models.DateField(blank=True, null=True)),
                ('package_end_dt', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('product_price', models.IntegerField(blank=True, null=True)),
                ('product_desc', models.CharField(blank=True, max_length=45, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategories',
            fields=[
                ('product_categories_id', models.IntegerField(db_column='Product_categories_id', primary_key=True, serialize=False)),
                ('product_categories_name', models.CharField(blank=True, db_column='Product_categories_name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'product_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('purchase_id', models.IntegerField(db_column='Purchase_id', primary_key=True, serialize=False)),
                ('purchase_date', models.DateField(blank=True, db_column='Purchase_date', null=True)),
                ('purchase_amount', models.IntegerField(blank=True, db_column='Purchase_Amount', null=True)),
            ],
            options={
                'db_table': 'purchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturn',
            fields=[
                ('purchase_return_id', models.IntegerField(db_column='Purchase_return_id', primary_key=True, serialize=False)),
                ('purchase_return_date', models.DateField(blank=True, db_column='Purchase_return_date', null=True)),
                ('purchase_return_amount', models.IntegerField(blank=True, db_column='Purchase_return_amount', null=True)),
            ],
            options={
                'db_table': 'purchase_return',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, db_column='Rating', null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('sales_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sales_date', models.DateField(blank=True, db_column='Sales_date', null=True)),
                ('payment', models.CharField(blank=True, db_column='Payment', max_length=50, null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'sales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesReturn',
            fields=[
                ('sales_return_id', models.IntegerField(db_column='Sales_return_id', primary_key=True, serialize=False)),
                ('sales_return_date', models.DateField(blank=True, db_column='Sales_return_date', null=True)),
                ('sales_return_total_amount', models.IntegerField(blank=True, db_column='Sales_return_total_amount', null=True)),
            ],
            options={
                'db_table': 'sales_return',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('salon_id', models.IntegerField(db_column='Salon_id', primary_key=True, serialize=False)),
                ('salon_name', models.TextField(db_column='Salon_Name')),
                ('address', models.CharField(db_column='Address', max_length=45)),
                ('contact_no', models.IntegerField(db_column='Contact_no')),
                ('salon_email', models.TextField(blank=True, db_column='Salon_Email', null=True)),
            ],
            options={
                'db_table': 'salon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCategories',
            fields=[
                ('service_categories_no', models.IntegerField(primary_key=True, serialize=False)),
                ('service_categories_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'service_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceGiven',
            fields=[
                ('service_given_id', models.IntegerField(primary_key=True, serialize=False)),
                ('service_date', models.DateField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'service_given',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('service_id', models.IntegerField(primary_key=True, serialize=False)),
                ('service_name', models.TextField(blank=True, db_column='Service_name', null=True)),
                ('service_duration', models.TimeField(blank=True, db_column='Service_duration', null=True)),
                ('service_rate', models.IntegerField(blank=True, db_column='Service_rate', null=True)),
            ],
            options={
                'db_table': 'services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('specialist_id', models.IntegerField(primary_key=True, serialize=False)),
                ('specialist_name', models.CharField(blank=True, max_length=45, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('contact', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'specialist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('prod_qty', models.CharField(max_length=45)),
                ('product_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Product')),
                ('user_user_id', models.IntegerField(db_column='User_user_id')),
            ],
            options={
                'db_table': 'cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackagesServices',
            fields=[
                ('packages_package', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Package')),
            ],
            options={
                'db_table': 'packages_services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseDetails',
            fields=[
                ('product_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Product')),
                ('prod_qty', models.IntegerField(blank=True, db_column='Prod_qty', null=True)),
            ],
            options={
                'db_table': 'purchase_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturnDetails',
            fields=[
                ('purchase_return_purchase_return', models.ForeignKey(db_column='Purchase_return_Purchase_return_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.PurchaseReturn')),
                ('purchase_return_qty', models.IntegerField(blank=True, db_column='Purchase_return_qty', null=True)),
            ],
            options={
                'db_table': 'purchase_return_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesDetail',
            fields=[
                ('product_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Product')),
                ('qty_order', models.IntegerField(blank=True, null=True)),
                ('sales_price', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesReturnDetails',
            fields=[
                ('product_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Product')),
                ('sales_return_qty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_return_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceGivenDetails',
            fields=[
                ('services_service', models.ForeignKey(db_column='Services_service_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='salon.Services')),
            ],
            options={
                'db_table': 'service_given_details',
                'managed': False,
            },
        ),
    ]
